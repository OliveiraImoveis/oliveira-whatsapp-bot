
const express = require('express');
const bodyParser = require('body-parser');
const axios = require('axios');
const app = express();

app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

const OPENAI_API_KEY = process.env.OPENAI_API_KEY;
const AIRTABLE_API_KEY = process.env.AIRTABLE_API_KEY;
const AIRTABLE_BASE_ID = "app3fIYLbvNqJDju5";
const AIRTABLE_TABLE_ID = "tbloAV7N2yZyHtV6g";

// Lista de respostas por interesse
const respostasPorInteresse = [
  {
    interesse: "compra",
    palavras: ["comprar", "adquirir", "casa", "imÃ³vel prÃ³prio", "apartamento para comprar", "compra de imÃ³vel"],
    resposta: `Excelente escolha! ðŸ˜Š A Oliveira ImÃ³veis Ã© especializada em ajudar estrangeiros a comprarem imÃ³veis em Portugal, com seguranÃ§a jurÃ­dica e acompanhamento completo. Para comeÃ§armos, preencha nosso questionÃ¡rio: https://landbot.pro/v3/H-1752472-QJQ7HH99G5WN457C/index.html`
  },
  {
    interesse: "arrendamento",
    palavras: ["alugar", "arrendar", "imÃ³vel para alugar", "apartamento para alugar", "preciso de casa para morar"],
    resposta: `Que bom! Ajudamos famÃ­lias a chegarem em Portugal com o imÃ³vel garantido, mesmo Ã  distÃ¢ncia. Nosso serviÃ§o de arrendamento Ã© completo. Para comeÃ§ar, preencha nosso questionÃ¡rio: https://landbot.pro/v3/H-1752472-QJQ7HH99G5WN457C/index.html`
  },
  {
    interesse: "visto",
    palavras: ["visto", "documentaÃ§Ã£o", "D7", "residÃªncia", "legalizaÃ§Ã£o", "Easyway", "processo consular"],
    resposta: `Claro! A Easyway to Portugal, empresa do grupo Oliveira ImÃ³veis, oferece suporte completo para todos os tipos de visto vÃ¡lidos para Portugal. Para analisarmos seu caso, preencha nosso formulÃ¡rio: https://landbot.pro/v3/H-1752472-QJQ7HH99G5WN457C/index.html`
  },
  {
    interesse: "relocation",
    palavras: ["chegar em Portugal", "mudanÃ§a", "relocation", "transiÃ§Ã£o", "adaptar", "ligar luz", "conta bancÃ¡ria"],
    resposta: `A Oliveira ImÃ³veis cuida da sua chegada: imÃ³vel, ligaÃ§Ã£o de Ã¡gua/luz/gÃ¡s e conta bancÃ¡ria. Tudo feito com atenÃ§Ã£o ao detalhe, mesmo fora do paÃ­s. Preencha nosso questionÃ¡rio para atendimento: https://landbot.pro/v3/H-1752472-QJQ7HH99G5WN457C/index.html`
  },
  {
    interesse: "investimento",
    palavras: ["investimento", "investir", "rentabilidade", "imÃ³vel com retorno", "comprar para alugar"],
    resposta: `Atuamos com investidores que buscam imÃ³veis com boa rentabilidade em Portugal. Preencha nosso questionÃ¡rio para avaliarmos oportunidades: https://landbot.pro/v3/H-1752472-QJQ7HH99G5WN457C/index.html`
  },
  {
    interesse: "pesquisa",
    palavras: ["pesquisando", "em dÃºvida", "saber mais", "curiosidade"],
    resposta: `Estamos aqui para ajudar vocÃª a entender tudo sobre o mercado portuguÃªs. Mesmo que ainda esteja em fase de pesquisa, preencha o questionÃ¡rio para receber um atendimento direcionado: https://landbot.pro/v3/H-1752472-QJQ7HH99G5WN457C/index.html`
  }
];

function identificarInteresse(msg) {
  msg = msg.toLowerCase();
  for (let item of respostasPorInteresse) {
    if (item.palavras.some(p => msg.includes(p))) {
      return item;
    }
  }
  return null;
}

async function salvarOuAtualizarLead(numero, mensagem, interesse = "") {
  try {
    const urlBusca = `https://api.airtable.com/v0/${AIRTABLE_BASE_ID}/${AIRTABLE_TABLE_ID}?filterByFormula={NÃºmero}='${numero}'`;
    const resBusca = await axios.get(urlBusca, {
      headers: {
        Authorization: `Bearer ${AIRTABLE_API_KEY}`
      }
    });

    const now = new Date().toISOString();

    if (resBusca.data.records.length > 0) {
      // Atualizar
      const recordId = resBusca.data.records[0].id;
      await axios.patch(`https://api.airtable.com/v0/${AIRTABLE_BASE_ID}/${AIRTABLE_TABLE_ID}/${recordId}`, {
        fields: {
          ÃšltimaMensagem: mensagem,
          Interesse: interesse || resBusca.data.records[0].fields.Interesse || "",
          DataAtualizaÃ§Ã£o: now
        }
      }, {
        headers: {
          Authorization: `Bearer ${AIRTABLE_API_KEY}`,
          "Content-Type": "application/json"
        }
      });
    } else {
      // Criar
      await axios.post(`https://api.airtable.com/v0/${AIRTABLE_BASE_ID}/${AIRTABLE_TABLE_ID}`, {
        fields: {
          NÃºmero: numero,
          ÃšltimaMensagem: mensagem,
          Interesse: interesse,
          DataAtualizaÃ§Ã£o: now
        }
      }, {
        headers: {
          Authorization: `Bearer ${AIRTABLE_API_KEY}`,
          "Content-Type": "application/json"
        }
      });
    }
  } catch (err) {
    console.error("Erro ao salvar/atualizar no Airtable:", err.response?.data || err.message);
  }
}

app.post('/webhook', async (req, res) => {
  const userMessage = req.body.Body || '';
  const numero = req.body.From || 'desconhecido';
  const interesseDetectado = identificarInteresse(userMessage);

  if (interesseDetectado) {
    await salvarOuAtualizarLead(numero, userMessage, interesseDetectado.interesse);
    return res.send(interesseDetectado.resposta);
  }

  if (userMessage.trim().length < 6) {
    await salvarOuAtualizarLead(numero, userMessage);
    return res.send(`SÃ³ para te ajudar melhor: vocÃª estÃ¡ buscando comprar, arrendar, tratar do visto ou apenas entender melhor o mercado? ðŸ˜Š`);
  }

  const promptBase = `VocÃª Ã© o assistente virtual da Oliveira ImÃ³veis, uma imobiliÃ¡ria portuguesa especializada em atender estrangeiros que desejam comprar ou arrendar um imÃ³vel em Portugal. 
Use sempre um tom profissional, acolhedor e claro. Nunca invente informaÃ§Ãµes. Em caso de dÃºvidas jurÃ­dicas, direcione o cliente para uma reuniÃ£o com um consultor.`;

  try {
    const response = await axios.post('https://api.openai.com/v1/chat/completions', {
      model: 'gpt-3.5-turbo',
      messages: [
        { role: 'system', content: promptBase },
        { role: 'user', content: userMessage }
      ]
    }, {
      headers: {
        'Authorization': `Bearer ${OPENAI_API_KEY}`,
        'Content-Type': 'application/json'
      }
    });

    const reply = response.data.choices[0].message.content;
    await salvarOuAtualizarLead(numero, userMessage);
    res.set('Content-Type', 'text/plain');
    res.send(reply);
  } catch (error) {
    console.error(error.response ? error.response.data : error.message);
    res.status(500).send('Erro ao processar a mensagem.');
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Servidor rodando na porta ${PORT}`);
});
